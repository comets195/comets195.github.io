<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-04-20T18:00:10+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Napster’iOS</title><subtitle>하루하루 열심히.</subtitle><author><name>Napster</name></author><entry><title type="html">[Raywenderlich] Concurrency 1: 소개</title><link href="http://localhost:4000/concurrency/Concurrency1/" rel="alternate" type="text/html" title="[Raywenderlich] Concurrency 1: 소개" /><published>2020-04-20T00:00:00+09:00</published><updated>2020-04-20T00:00:00+09:00</updated><id>http://localhost:4000/concurrency/Concurrency1</id><content type="html" xml:base="http://localhost:4000/concurrency/Concurrency1/">&lt;h1 id=&quot;concurrency란-무엇인가&quot;&gt;Concurrency란 무엇인가?&lt;/h1&gt;
&lt;p&gt;회사의 프로젝트를 진행하면서 iOS의 동시성 프로그래밍의 개념 공부가 필요해졌었다. 
필요로 했던 기능은 이미지 업로드 서버 요청과 동시에 UI에 업로드 중이라는 변화를 보여줘야하는 기능이었다.&lt;/p&gt;

&lt;p&gt;가장 기본적인 내용인 UI는 꼭 Main Thread에서 실행해야한다 정도만 알고 있었고, 어떻게 다른 Thread에게 일을 시키면 되는지 알고 싶어 공부하게 되었다.&lt;/p&gt;

&lt;p&gt;책에서는 Concurrency, 동시성을 간단하게 말하고 있다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;“같은 실행시간 동안 앱의 로직이나 랜덤하게 코드가 실행할때, 여전히 정확한 데이터 플로우대로 결과를 보여줘야 한다는 것.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;덮붙혀 모던 기기들은 한개 이상의 CPU를 가지고 있기 때문에, Single task 이상의 작업을 같은 시간안에 해결 할 수 있게 되었다.&lt;/p&gt;

&lt;p&gt;Q. 여담으로 A13칩은 몇코어?(6코어…)
&lt;img src=&quot;/assets/images/post-concurrency/1_apple_a13_bionic.jpg&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;왜-concurrency를-사용-해야-하는가&quot;&gt;왜 Concurrency를 사용 해야 하는가?&lt;/h1&gt;
&lt;p&gt;중요한 이야기다. 앱의 사용성을 높이기 위해서 사용해야한다. 너무 당연한 이야기 아닌가? 만약 MainThreed에서 동시에 여러일을 하게되면 분명히 UI는 프리징 되어 보여질 것!!
동시성을 사용하면서 생길 수 있는 좋은 부작용은 기능을 추가할때 전반적인 설계를 하는데 조금 더 많은 시간이 걸린 다는 것이다.&lt;/p&gt;

&lt;h1 id=&quot;그럼-어떻게-사용하는데&quot;&gt;그럼 어떻게 사용하는데?&lt;/h1&gt;
&lt;p&gt;이게 이 시리즈의 초점이라고한다.(당연한 소’릴…)&lt;/p&gt;

&lt;p&gt;이 책을 끝맞치면 이런 스킬들이 생긴단다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;높은 수준의 구조를 가진 앱이 같은 시간안에 여러 태스크들을 동시에 실핼 할 수 있게 도와준다.&lt;/li&gt;
  &lt;li&gt;각자 다른 리소스에 태스크들이 접근을 할때, 공유 리소스는 읽기 전용으로만, 접근이 가능한 다른 쓰레드에서는 좀더 빠른 프로세싱을 할 수 있게 접근을 허용 할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;결론&quot;&gt;결론&lt;/h1&gt;

&lt;p&gt;당연한 소리를 하고있다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;틀린점이나 이상한점이 있다면 제보 감사합니다. :)&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Napster</name></author><summary type="html">Concurrency란 무엇인가? 회사의 프로젝트를 진행하면서 iOS의 동시성 프로그래밍의 개념 공부가 필요해졌었다. 필요로 했던 기능은 이미지 업로드 서버 요청과 동시에 UI에 업로드 중이라는 변화를 보여줘야하는 기능이었다.</summary></entry><entry><title type="html">Hello Swift World!</title><link href="http://localhost:4000/%EC%8B%9C%EC%9E%91/Hello-Swift/" rel="alternate" type="text/html" title="Hello Swift World!" /><published>2020-04-20T00:00:00+09:00</published><updated>2020-04-20T00:00:00+09:00</updated><id>http://localhost:4000/%EC%8B%9C%EC%9E%91/Hello%20Swift</id><content type="html" xml:base="http://localhost:4000/%EC%8B%9C%EC%9E%91/Hello-Swift/">&lt;h1 id=&quot;hello-swift-world&quot;&gt;Hello Swift World!&lt;/h1&gt;

&lt;p&gt;안녕하세요?
첫번째 포스팅입니다. 앞으로 블로그를 어떻게 운영하면 좋을지에 대한 간략한 소개들 정도 되겠네요.&lt;/p&gt;

&lt;p&gt;저는 iOS개발자 입니다. 아직 한참 배울께 많죠. 그래서 아는 것도 다시한번 정리해보는 시간을 갖는 것과 잘못 알고 있는 것을 피드백을 통해 고치려고합니다. 알게된 것들은 구글 검색을 통해 알게되는 것도 있겠지만 공식문서를 기반으로 알아가보려합니다.&lt;/p&gt;

&lt;p&gt;매주 혹은 2주마다 하나씩 큰 주제를 정하고 그에 맞는 공식문서의 내용과 내가 생각한게 맞는지를 검증하는 코드와 함께 포스팅을 할 예정입니다.&lt;/p&gt;

&lt;p&gt;꾸준히 블로그를 할 수 있길 바라며 이글을 시작으로 블로그를 시작해보려합니다.&lt;/p&gt;

&lt;p&gt;감사합니다.&lt;/p&gt;

&lt;p&gt;Napster.&lt;/p&gt;</content><author><name>Napster</name></author><summary type="html">Hello Swift World!</summary></entry></feed>